
const { dialog } = require('electron')
const fs = require("fs")
const path = require("path")
const homedir = require('os').homedir();
const child_process = require('child_process')
const fetch = require("node-fetch")

JELLYFISH_DATA_DIR = global.JELLYFISH_DATA_DIR

var p

var ltxt = "Loading..."
    var ltvl = setInterval(() => {try{win.webContents.send("set-inject-btn-text",ltxt)} catch(e) {process.exit()}})

function handleData(d) {
    console.log(d)
        if (d.startsWith("l|UNKNOWN")) {
            ltxt = "Unknown error"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Synapse X had a critical, unknown, error",
                detail: "Try again?",
            })
        } else if (d.startsWith("l|NOT_LOGGED_IN")) {
            ltxt = "Not logged in"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Please log into Synapse X",
                detail: "Open the official Synapse X application, log in, then quit out, then restart Jellyfish.",
            })
        } else if (d.startsWith("l|NOT_UPDATED")) {
                ltxt = "Not updated"
                win.webContents.send("set-inject-btn-text",ltxt)
                dialog.showMessageBoxSync(win,{
                    message: "Synapse isn't updated",
                    detail: "Please restart Jellyfish when it is.",
                })
        } else if (d.startsWith("l|FAILED_TO_VERIFY")) {
            ltxt = "Verification failed"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Please reinstall Synapse X",
                detail: "",
            })
        } else if (d.startsWith("l|FAILED_TO_DOWNLOAD")) {
            ltxt = "Download failed"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Synapse failed to download required files.",
                detail: "Make sure your anti-virus has Synapse excluded.",
            })
        } else if (d.startsWith("l|UNAUTHORIZED_HWID")) {
            ltxt = "Not whitelisted"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "This computer is not authorized to use Synapse",
                detail: "Ask Synapse X about whitelisting.",
            })
        } else if (d.startsWith("l|ALREADY_EXISTING_WL")) {
            ltxt = "Error"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Whitelist error.",
                detail: "This is a rare error - tell the user to use the official UI to fix this issue.",
            })
        } else if (d.startsWith("l|NOT_ENOUGH_TIME")) {
            ltxt = "Whitelist Ratelimit"
            win.webContents.send("set-inject-btn-text",ltxt)
            dialog.showMessageBoxSync(win,{
                message: "Whitelist raitlimited",
                detail: "There was not enough time preceding the last whitelist change. Whitelist changes can only happen every 24 hours.",
            })
        } else if (d.startsWith("l|CHECKING_WL")) {
            ltxt = "Checking Whitelist"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("l|CHANGING_WL")) {
            ltxt = "Changing Whitelist"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("l|DOWNLOADING_DATA")) {
            ltxt = "Downloading data"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("l|CHECKING_DATA")) {
            ltxt = "Checking data"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("l|DOWNLOADING_DLLS")) {
            ltxt = "Downloading DLLs"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|CHECKING")) {
            ltxt = "Checking"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|INJECTING")) {
            ltxt = "Injecting"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|CHECKING_WHITELIST")) {
            ltxt = "Checking whitelist"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|SCANNING")) {
            ltxt = "Scanning"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|FAILED_TO_FIND")) {
            dialog.showMessageBoxSync(win,{
                message: "Roblox isn't running",
                detail: "We couldn't inject into Roblox, well, because there's no Roblox to inject into!",
            })
            ltxt = "Error"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|FAILED_TO_ATTACH")) {
            dialog.showMessageBoxSync(win,{
                message: "Failed to inject",
                detail: "Injection failed for some reason.",
            })
            ltxt = "Error"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|NOT_RUNNING_LATEST_VER_UPDATING")) {
            dialog.showMessageBoxSync(win,{
                message: "Synapse is updating",
                detail: "Synapse X has detected you are not running the latest version of Synapse X. Synapse will now update itself.",
            })
            ltxt = "Updating"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|UPDATING_DLLS")) {
            dialog.showMessageBoxSync(win,{
                message: "Synapse is updating DLLs.",
                detail: "Synapse X has detected you are not running the latest version of Synapse X. Synapse will now update the DLLs.",
            })
            ltxt = "Updating"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|NOT_UPDATED")) {
            dialog.showMessageBoxSync(win,{
                message: "Synapse's update isn't ready yet.",
                detail: "Synapse X has detected you are not running the latest version of Synapse X, however the latest version is not ready yet.",
            })
            ltxt = "Error"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|FAILED_TO_UPDATE")) {
            dialog.showMessageBoxSync(win,{
                message: "Update failed",
                detail: "Synapse X has detected you are not running the latest version of Synapse X, tried to update, but the update failed.",
            })
            ltxt = "Error"
            win.webContents.send("set-inject-btn-text",ltxt)
            setTimeout(function() {
                win.webContents.send("enable-inject-btn")
            },2000)
        } else if (d.startsWith("a|REINJECTING")) {
            ltxt = "Updating"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("a|NOT_INJECTED")) {
            dialog.showMessageBoxSync(win,{
                message: "Cannot run script",
                detail: "Synapse X is not currently injected. Please inject first.",
            })
        } else if (d.startsWith("a|ALREADY_INJECTED")) {
            ltxt = "Already injected"
            win.webContents.send("set-inject-btn-text",ltxt)
        } else if (d.startsWith("e|")) {
            dialog.showMessageBoxSync(win,{
                message: "Synapse Error",
                detail: d,
            })
        } else if (d.startsWith("sh|")) {
            var s = d.split("|")
            var name = s[1]
            var desc = s[2]
            if (!fs.existsSync(path.join(JELLYFISH_DATA_DIR,"Scripts", "Synapse X"))) {
                fs.mkdirSync(path.join(JELLYFISH_DATA_DIR,"Scripts", "Synapse X"))
            }
            if (!fs.existsSync(path.join(JELLYFISH_DATA_DIR,"Scripts","Synapse X",name + ".txt"))) {
                fs.writeFileSync(path.join(JELLYFISH_DATA_DIR,"Scripts","Synapse X",name + ".txt"),"SYNX_SHUB|"+ name + "|\n\n\"" +desc + "\"\n\n-- Synapse X script hub scripts are not available to be edited here." )
            }
        } else if (d.startsWith("l|READY") || d.startsWith("a|READY")) {
            clearInterval(ltvl)
            win.webContents.send("enable-inject-btn")
            if (d.startsWith("a|READY")) {
                runScript(`local function callback(text)
    game:shutdown()
    end
    local bindableFunction = Instance.new("BindableFunction")
    bindableFunction.OnInvoke = callback
    
    game.StarterGui:SetCore("SendNotification", {
        Title = "Jellyfish for Synapse X";
        Text = "Synapse has been successfully injected"; 
        Callback = bindableFunction;
        Button1 = "Exit";
    })
    `)
                if (dialog.showMessageBoxSync(win,{
                    message: "Synapse injected.",
                    detail: "Enjoying Jellyfish? Consider donating for more updates and features.",
                    buttons: ["Sure","Dismiss","Sure"],
                    defaultId: 1,
                }) != 1) {
                    child_process.spawnSync("cmd",["/s","/c","start","https://thelmgn.com/donate.html","/b"])
                }
            }
        }
}


function init() {
    p = child_process.spawn("JellyDriver-SynapseX.exe", {stdio: "pipe", windowsHide: true})
    p.on("exit",() => {
        ltxt = "Driver quit"
        win.webContents.send("set-inject-btn-text",ltxt)
        dialog.showMessageBoxSync(win,{
            message: "Synapse quit",
            detail: "The internal Synapse driver quit. This could be because you have multiple Jellyfish instances running, your Synapse or Jellyfish installation is corrupt, or some other error.",
        })
    })
    p.stdout.on("data",(d) => {
        d = d.toString().split("\n")
        for (var s of d) {
            handleData(s)
        }
    })
}
function downloadInitialScripts() {
    
}

function runScript(arg) {
    fs.writeFileSync(path.join(JELLYFISH_DATA_DIR,"script.txt"),arg)
    p.stdin.write("s|" + path.join(JELLYFISH_DATA_DIR,"script.txt") + "\r\n")
}

var firstInject = true


async function checkCreds(event,arg) {
    win.webContents.send("login-success")
    setTimeout(function() {
        win.webContents.send("enable-inject-btn")
    },2000)
    return true
    
}

async function inject(evt,arg) {
    p.stdin.cork()
    p.stdin.write("i|\r\n")
    process.nextTick(() => p.stdin.uncork());
}

module.exports = {init,downloadInitialScripts,runScript,checkCreds,inject}